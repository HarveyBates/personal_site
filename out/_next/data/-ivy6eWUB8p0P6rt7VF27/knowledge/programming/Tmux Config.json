{"pageProps":{"htmlString":"<h2 id=\"description\">Description</h2>\n<p>Settings used for Tmux.</p>\n<h2 id=\"sourcing-tmux-configuration\">Sourcing Tmux Configuration</h2>\n<p>In the terminal.</p>\n<pre><code class=\"language-bash\">tmux source-file ~/.tmux.conf\n</code></pre>\n<p>In Tmux (Requires being in tmux mode (ctrl-a)).</p>\n<pre><code class=\"language-bash\">:source-file ~/.tmux.conf\n</code></pre>\n<h2 id=\"powerline\">Powerline</h2>\n<p>Powerline is a status line plugin for vim and tmux (plus some others).</p>\n<h3 id=\"installation\">Installation</h3>\n<p>Powerline requires Python (so if you don&#39;t have python you need that). Also you need pip to install.</p>\n<pre><code class=\"language-bash\">pip install powerline status\n# or\npip3 install powerline-status\n# or\npython3 -m pip install powerline-status\n</code></pre>\n<p>You need to add this line to your .tmux.conf file and then source your configuration.</p>\n<pre><code class=\"language-bash\">source &quot;/usr/local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf&quot;\n</code></pre>\n<p>If you get problems with the installed fonts (i.e. you get question marks in your powerline) you need to install a powerline specific font.</p>\n<p>To do this, navigate to this <a href=\"https://github.com/powerline/fonts\">link</a> and clone the library.</p>\n<pre><code class=\"language-bash\">git clone https://github.com/powerline/fonts\ncd fonts\n./install.sh # Install powerline fonts\n</code></pre>\n<p>Now navigate to your terminal preferences and change your font to a powerline specific font. (I am using &quot;Meslo LG S Regular for Powerline 11pt&quot;).</p>\n<h2 id=\"configuration\">Configuration</h2>\n<pre><code class=\"language-bash\"># -- general -------------------------------------------------------------------\n\nset -g default-terminal &quot;screen-256color&quot; # colors!\n# To install power line see below\nsource &quot;/usr/local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf&quot;\nsetw -g xterm-keys on\nset -s escape-time 10                     # faster command sequences\nset -sg repeat-time 600                   # increase repeat timeout\nset -s focus-events on\n\nunbind C-b\nset-option -g prefix C-a\nbind-key C-a send-prefix\n\nbind C-a send-prefix -2\n\nset -q -g status-utf8 on                  # expect UTF-8 (tmux &lt; 2.2)\nsetw -q -g utf8 on\n\nset -g history-limit 5000                 # boost history\n\n# edit configuration\nbind e new-window -n &quot;~/.tmux.conf.local&quot; &quot;EDITOR=\\${EDITOR//mvim/vim} &amp;&amp; EDITOR=\\${EDITOR//gvim/vim} &amp;&amp; \\${EDITOR:-vim} ~/.tmux.conf.local &amp;&amp; tmux source ~/.tmux.conf &amp;&amp; tmux display \\&quot;~/.tmux.conf sourced\\&quot;&quot;\n\n# reload configuration\nbind r source-file ~/.tmux.conf \\; display &#39;~/.tmux.conf sourced&#39;\n\n# -- display -------------------------------------------------------------------\n\nset -g base-index 1           # start windows numbering at 1\nsetw -g pane-base-index 1     # make pane numbering consistent with windows\n\nsetw -g automatic-rename on   # rename window to reflect current program\nset -g renumber-windows on    # renumber windows when a window is closed\n\nset -g set-titles on          # set terminal title\n\nset -g display-panes-time 800 # slightly longer pane indicators display time\nset -g display-time 1000      # slightly longer status messages display time\n\nset -g status-interval 10     # redraw status line every 10 seconds\n\n# clear both screen and history\nbind -n C-l send-keys C-l \\; run &#39;sleep 0.1&#39; \\; clear-history\n\n# activity\nset -g monitor-activity on\nset -g visual-activity off\n\n# -- navigation ----------------------------------------------------------------\n\n# find session\nbind C-f command-prompt -p find-session &#39;switch-client -t %%&#39;\n\n# split current window horizontally\nbind - split-window -v\n# split current window vertically\nbind _ split-window -h\n\n# pane navigation\nbind -r h select-pane -L  # move left\nbind -r j select-pane -D  # move down\nbind -r k select-pane -U  # move up\nbind -r l select-pane -R  # move right\nbind &gt; swap-pane -D       # swap current pane with the next one\nbind &lt; swap-pane -U       # swap current pane with the previous one\n\n# maximize current pane\nbind + run &#39;cut -c3- ~/.tmux.conf | sh -s _maximize_pane &quot;#{session_name}&quot; #D&#39;\n\n# window navigation\nbind Tab last-window        # move to last active window\n\n# toggle mouse\nbind m run &quot;cut -c3- ~/.tmux.conf | sh -s _toggle_mouse&quot;\n\n# -- urlview -------------------------------------------------------------------\n\nbind U run &quot;cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}&quot;\n\n# -- facebook pathpicker -------------------------------------------------------\n\nbind F run &quot;cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}&quot;\n\n# -- list choice (tmux &lt; 2.4) --------------------------------------------------\n\n# vi-choice is gone in tmux &gt;= 2.4\nrun -b &#39;tmux bind -t vi-choice h tree-collapse 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice l tree-expand 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice K start-of-list 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice J end-of-list 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice H tree-collapse-all 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice L tree-expand-all 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-choice Escape cancel 2&gt; /dev/null || true&#39;\n\n# -- edit mode (tmux &lt; 2.4) ----------------------------------------------------\n\n# vi-edit is gone in tmux &gt;= 2.4\nrun -b &#39;tmux bind -ct vi-edit H start-of-line 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -ct vi-edit L end-of-line 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -ct vi-edit q cancel 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -ct vi-edit Escape cancel 2&gt; /dev/null || true&#39;\n\n# -- copy mode -----------------------------------------------------------------\n\nbind Enter copy-mode # enter copy mode\n\nrun -b &#39;tmux bind -t vi-copy v begin-selection 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi v send -X begin-selection 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-copy C-v rectangle-toggle 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-copy y copy-selection 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-copy Escape cancel 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi Escape send -X cancel 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-copy H start-of-line 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi H send -X start-of-line 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -t vi-copy L end-of-line 2&gt; /dev/null || true&#39;\nrun -b &#39;tmux bind -T copy-mode-vi L send -X end-of-line 2&gt; /dev/null || true&#39;\n\n# copy to macOS clipboard\nif -b &#39;command -v pbcopy &gt; /dev/null 2&gt;&amp;1&#39; &#39;bind y run -b &quot;tmux save-buffer - | pbcopy&quot;&#39;\nif -b &#39;command -v reattach-to-user-namespace &gt; /dev/null 2&gt;&amp;1&#39; &#39;bind y run -b &quot;tmux save-buffer - | reattach-to-user-namespace pbcopy&quot;&#39;\n\n# copy to X11 clipboard\nif -b &#39;command -v xsel &gt; /dev/null 2&gt;&amp;1&#39; &#39;bind y run -b &quot;tmux save-buffer - | xsel -i -b&quot;&#39;\nif -b &#39;! command -v xsel &gt; /dev/null 2&gt;&amp;1 &amp;&amp; command -v xclip &gt; /dev/null 2&gt;&amp;1&#39; &#39;bind y run -b &quot;tmux save-buffer - | xclip -i -selection clipboard &gt;/dev/null 2&gt;&amp;1&quot;&#39;\n# copy to Windows clipboard\nif -b &#39;command -v clip.exe &gt; /dev/null 2&gt;&amp;1&#39; &#39;bind y run -b &quot;tmux save-buffer - | clip.exe&quot;&#39;\nif -b &#39;[ -c /dev/clipboard ]&#39; &#39;bind y run -b &quot;tmux save-buffer - &gt; /dev/clipboard&quot;&#39;\n\n# -- buffers -------------------------------------------------------------------\n\nbind b list-buffers  # list paste buffers\nbind p paste-buffer  # paste from the top paste buffer\nbind P choose-buffer # choose which buffer to paste from\n\n# -- user defined overrides ----------------------------------------------------\n\nif &#39;[ -f ~/.tmux.conf.local ]&#39; &#39;source ~/.tmux.conf.local&#39;\n\n# -- 8&lt; ------------------------------------------------------------------------\n\nrun &#39;cut -c3- ~/.tmux.conf | sh -s _apply_configuration&#39;\nrun -b &#39;[ -z &quot;#{window_active}&quot; ] &amp;&amp; [ -z &quot;#{version}&quot; ] &amp;&amp; tmux set display-time 3000 \\; display &quot;This configuration will soon require tmux &gt;= 2.4&quot; \\; set -u display-time || true&#39;\n</code></pre>\n","data":{"title":"Tmux Configuration"}},"__N_SSG":true}